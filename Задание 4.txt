1. Что такое тестирование безопасности?
-тестирование с целью оценить защищенность программного продукта. (ISTQB)

2. Перечислите Принципы безопасности программного обеспечения?
- Конфиденциальность (означает, что конфиденциальная информация должна быть защищена от несанкционированного доступа)
- Целостность (означает, что данные должны быть защищены от изменения несанкционированными лицами.)
- Доступность (означает, что информация должна быть доступна только тем, кто имеет на это право)

3. Перечислите виды уязвимостей в безопасности программного обеспечения
Инъекции — это уязвимости, связанные с возможностью внедрения зловредного кода в приложение через входные данные, такие как поля форм, URL-адреса, файлы и т.д.
Недостаточная авторизация и аутентификация — это уязвимости, связанные с отсутствием или недостаточной проверкой подлинности пользователей, что может привести к несанкционированному доступу к системе, краже учетных данных и т.д.
Утечки информации — это уязвимости, связанные с некорректным хранением или передачей конфиденциальной информации.
Недостатки в защите приложения — это уязвимости, связанные с недостаточной защитой приложения от внешних атак, таких как DDoS-атаки, переполнение буфера, уязвимости в системе контроля доступа и т.д.
Уязвимости в софте третьих сторон — это уязвимости, связанные с использованием приложением стороннего кода, который может содержать уязвимости, такие как небезопасные библиотеки и фреймворки, открытые порты, уязвимости в настройках и т.д.
4. Что такое Тестирование на отказ и восстановления Failover and Recovery Testing?
Это метод, проверяющий способность системы противостоять сбоям и восстанавливаться после них. Он включает в себя симуляцию различных сбоев (например, отключение питания) и оценку эффективности систем восстановления, чтобы обеспечить сохранность данных и минимизацию времени простоя.

5. Тестирование эффективности использования ресурсов
Этот вид тестирования направлен на оценку того, насколько эффективно система использует доступные ресурсы (например, память, процессорное время и сетевые соединения). Цель — выявить узкие места и оптимизировать производительность.

6. Тестирование масштабируемости (Scalability Testing)
Тестирование масштабируемости проверяет, как система справляется с увеличением нагрузки или объема данных. Оно помогает определить, насколько легко система может быть расширена или адаптирована для обработки большего количества пользователей или данных без потери производительности.

7. Тестирование производительности (Performance Testing)
Это общее название для нескольких видов тестирования, включая нагрузочное (Load Testing), стрессовое (Stress Testing) и объемное (Volume Testing). Оно направлено на оценку быстродействия системы под различными условиями нагрузки, чтобы убедиться в ее стабильности и надежности при реальных сценариях использования.




8. Тестирование надежности (Reliability Testing)
Этот метод проверяет, насколько система может функционировать без сбоев в течение определенного времени. Он включает в себя длительное тестирование под средними нагрузками для оценки стабильности и предсказуемости работы системы.

9.Тестирование стабильности (Stability Testing)
Тестирование стабильности оценивает, как система ведет себя в течение длительных периодов работы. Оно направлено на выявление потенциальных проблем, которые могут возникнуть со временем, таких как утечки памяти или накопление ошибок.

10. Тестирование удобства использования (Usability Testing)
Этот вид тестирования оценивает, насколько легко и удобно пользователям взаимодействовать с системой. Оно включает в себя сбор отзывов от реальных пользователей и анализ их опыта, чтобы улучшить интерфейс и функциональность.

11. Тестирование Pixel Perfect
Тестирование Pixel Perfect фокусируется на точности визуального отображения элементов интерфейса. Инструменты для этого тестирования могут включать такие программы, как Pixelmator, Photoshop и специальные плагины для браузеров, которые позволяют сравнивать макеты с реальными страницами.

12. Тестирование локализации, совместимости и адаптивности
Локализация: проверяет, как система адаптируется к различным языковым и культурным контекстам.
Совместимость: оценивает, как система работает на различных платформах и устройствах.
Адаптивность: тестирует, насколько интерфейс и функциональность системы могут изменяться в зависимости от устройства или разрешения экрана.

13. Тестирование установки (Installation Testing)
Этот вид тестирования проверяет процесс установки программного обеспечения на различных системах, включая установку, обновление и удаление. Он направлен на выявление проблем, которые могут возникнуть во время установки.




14. Что такое ETL-тестирование/Тестирование перед
миграцией (Pre-Migration testing)/Миграционное тестирование (Migration testing)/Тестирование после миграции (Post-Migration testing)?

ETL-тестирование - это проверка процессов извлечения, трансформации и загрузки данных из различных источников в хранилище данных. Оно направлено на обеспечение точности данных после преобразования бизнес-логики и загрузки в целевую систему.
ETL-тестирование включает в себя проверку данных на различных промежуточных этапах между источником и пунктом назначения. Оно помогает выявить неверные данные, ошибки и потерю данных при передаче из источника в целевую систему.
Тестирование перед миграцией (Pre-Migration Testing)
Тестирование перед миграцией оценивает готовность системы к миграции данных. Оно проверяет, что все необходимые данные идентифицированы и подготовлены для миграции, а также что целевая система готова к приему данных.
Миграционное тестирование (Migration Testing)
Миграционное тестирование проверяет, как данные и функциональность системы работают после миграции. Оно подтверждает, что данные корректно перенесены и система функционирует как ожидалось после завершения миграции.
Тестирование после миграции (Post-Migration Testing)
Тестирование после миграции подтверждает, что все данные корректно перенесены и система работает в соответствии с требованиями после завершения миграции. Оно включает в себя сравнение данных в источнике и целевой системе, а также проверку критически важных бизнес-процессов
Ы